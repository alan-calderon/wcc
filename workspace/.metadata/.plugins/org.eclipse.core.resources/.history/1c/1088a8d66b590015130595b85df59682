
import com.leapmotion.leap.*;
import com.leapmotion.leap.Bone.Type;
import com.leapmotion.leap.Gesture.State;
import java.io.IOException;



/**
 *
 * @author lalo
 */
public class Dedo {
    
    public static void main(String[] args) {
    
    	
		
	}
    
}
class LeapListener extends Listener {
public void OnInit(Controller control){
        System.out.println("Inicializado");
    
    }
public void onConnect(Controller control){
 System.out.println("Conected to Motion System");
 control.enableGesture(Gesture.Type.TYPE_SWIPE);
 control.enableGesture(Gesture.Type.TYPE_CIRCLE);
   control.enableGesture(Gesture.Type.TYPE_KEY_TAP);
    control.enableGesture(Gesture.Type.TYPE_SCREEN_TAP);
    
}
public void onDisconnect(Controller control){

    System.out.println("Desconectado");
}
public void onExit(Controller control){
    System.out.println("Salir");}

public void onFrame(Controller control){
	Frame frame=control.frame();
	/*System.out.println("Frame id"+frame.id()+
	  ", Timestap"+frame.timestamp()+	
		  ", hands"+frame.hands().count()+
		  ", dedos"+frame.fingers().count()+
		  ", Tools"+frame.tools().count()+
		  ", movimientos"+frame.gestures().count());
	for(Hand mano:frame.hands()){
		
		String handType=mano.isLeft() ? "es izquierda":"Es derecha";
		System.out.println(handType+" "+", 	id:"+mano.id()+"Pocision de la palma"+mano.palmPosition());
		Vector normal=mano.palmNormal();
		Vector direccion=mano.direction();
		
	System.out.println("Pitch"+Math.toDegrees(direccion.pitch())+
			", Yaw"+Math.toDegrees(direccion.roll()));
	/*if(Math.toDegrees(direccion.pitch())>50&&Math.toDegrees(direccion.pitch())<95){
		System.out.println("Puede ser a e m n d l ll b");*/
			
		
		
	//}	
	//}
	for(Finger dedo:frame.fingers()){
		String nombre=dedo.type().toString();
		if(nombre.equals("TYPE_THUMB")){
		System.out.println("Dedo"+dedo.type());
	for(Bone.Type boneType:Bone.Type.values()){
		
		Bone hueso=dedo.bone(Type.TYPE_DISTAL);
		Vector direccion=hueso.basis().getYBasis();
		System.out.println(Math.toDegrees(direccion.pitch()));
		
	}
		
	}	
	}

}
}
